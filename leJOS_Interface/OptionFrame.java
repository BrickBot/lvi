package leJOS_Interface;
/*
 * OptionFrame.java
 * Copyright (C) 2001 Andy Gombos
 * gombos_2000@yahoo.com
 * http://www.geocities.com/gombos_2000/
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
import java.awt.Color;
import javax.swing.*;
import java.io.*;
import java.util.*;
import java.util.Properties;
import java.beans.*;
import javax.swing.table.*;
public class OptionFrame extends javax.swing.JDialog {

        /**
        *
        * Creates new form OptionFrame
        */
        public OptionFrame(java.awt.Frame parent, boolean modal) {
                super (parent, modal);
                initComponents ();
                pack ();
        }

        /** This method is called from within the constructor to
          * initialize the form.
          * WARNING: Do NOT modify this code. The content of this method is
          * always regenerated by the FormEditor.
          */
        private void initComponents () {//GEN-BEGIN:initComponents
            jTabbedPane1 = new javax.swing.JTabbedPane ();
            jPanel1 = new javax.swing.JPanel ();
            jCheckBox1 = new javax.swing.JCheckBox ();
            jPanel2 = new javax.swing.JPanel ();
            jTextField1 = new javax.swing.JTextField ();
            jLabel1 = new javax.swing.JLabel ();
            jPanel3 = new javax.swing.JPanel ();
            jRadioButton1 = new javax.swing.JRadioButton ();
            jRadioButton2 = new javax.swing.JRadioButton ();
            jRadioButton3 = new javax.swing.JRadioButton ();
            jPanel4 = new javax.swing.JPanel ();
            jPanel6 = new javax.swing.JPanel ();
            jPanel7 = new javax.swing.JPanel ();
            jComboBox1 = new javax.swing.JComboBox (comPorts);
            jLabel2 = new javax.swing.JLabel ();
            jPanel8 = new javax.swing.JPanel ();
            jLabel3 = new javax.swing.JLabel ();
            jTextField2 = new javax.swing.JTextField ();
            jLabel4 = new javax.swing.JLabel ();
            jTextField3 = new javax.swing.JTextField ();
            jLabel5 = new javax.swing.JLabel ();
            jTextField4 = new javax.swing.JTextField ();
            jLabel6 = new javax.swing.JLabel ();
            jTextField5 = new javax.swing.JTextField ();
            jLabel7 = new javax.swing.JLabel ();
            jTextField6 = new javax.swing.JTextField ();
            jPanel9 = new javax.swing.JPanel ();
            jLabel8 = new javax.swing.JLabel ();
            jCheckBox2 = new javax.swing.JCheckBox ();
            jLabel9 = new javax.swing.JLabel ();
            jTextField7 = new javax.swing.JTextField ();
            jLabel10 = new javax.swing.JLabel ();
            jTextField8 = new javax.swing.JTextField ();
            jLabel11 = new javax.swing.JLabel ();
            jTextField9 = new javax.swing.JTextField ();
            jLabel12 = new javax.swing.JLabel ();
            jTextField10 = new javax.swing.JTextField ();
            jLabel13 = new javax.swing.JLabel ();
            jTextField11 = new javax.swing.JTextField ();
            jLabel14 = new javax.swing.JLabel ();
            jTextField12 = new javax.swing.JTextField ();
            jLabel15 = new javax.swing.JLabel ();
            jTextField13 = new javax.swing.JTextField ();
            jLabel16 = new javax.swing.JLabel ();
            jTextField14 = new javax.swing.JTextField ();
            jPanel10 = new javax.swing.JPanel ();
            jPanel12 = new javax.swing.JPanel ();
            jButton6 = new javax.swing.JButton ();
            jButton7 = new javax.swing.JButton ();
            jScrollPane1 = new javax.swing.JScrollPane ();
            jTable2 = new javax.swing.JTable ();
            jPanel5 = new javax.swing.JPanel ();
            jButton1 = new javax.swing.JButton ();
            jButton2 = new javax.swing.JButton ();
            setModal (true);
            setTitle ("leJOS Interface Preferences");
            addWindowListener (new java.awt.event.WindowAdapter () {
                public void windowClosing (java.awt.event.WindowEvent evt) {
                    closeDialog (evt);
                }
            }
            );

            jTabbedPane1.setPreferredSize (new java.awt.Dimension(306, 300));

              jPanel1.setLayout (new java.awt.GridLayout (2, 1));
  
                jCheckBox1.setText ("Compile with Emulation settings");
                jCheckBox1.setEnabled (false);
    
                jPanel1.add (jCheckBox1);
    
    
                  jTextField1.setPreferredSize (new java.awt.Dimension(180, 20));
      
                  jPanel2.add (jTextField1);
      
                  jLabel1.setText ("leJOS Home Directory");
      
                  jPanel2.add (jLabel1);
      
                jPanel1.add (jPanel2);
    
              jTabbedPane1.addTab ("General Preferences", jPanel1);
  
              jPanel3.setLayout (new java.awt.GridLayout (3, 1));
  
                jRadioButton1.setText ("Java Look and Feel");
    
                jPanel3.add (jRadioButton1);
    
                jRadioButton2.setText ("Motif Look and Feel");
    
                jPanel3.add (jRadioButton2);
    
                jRadioButton3.setText ("Windows Look and Feel (Windows only)");
    
                jPanel3.add (jRadioButton3);
    
              jTabbedPane1.addTab ("Look and Feel", jPanel3);
  
              jPanel4.setLayout (new java.awt.GridLayout (3, 1));
  
    
                jPanel4.add (jPanel6);
    
    
      
                  jPanel7.add (jComboBox1);
      
                  jLabel2.setText ("Com port with attached IR tower");
                  jLabel2.setHorizontalAlignment (javax.swing.SwingConstants.CENTER);
      
                  jPanel7.add (jLabel2);
      
                jPanel4.add (jPanel7);
    
              jTabbedPane1.addTab ("Communications", jPanel4);
  
              jPanel8.setLayout (new java.awt.GridLayout (5, 2));
              jPanel8.setName ("jPanel8");
  
                jLabel3.setText ("Background Color");
    
                jPanel8.add (jLabel3);
    
                jTextField2.setEditable (false);
                jTextField2.addMouseListener (new java.awt.event.MouseAdapter () {
                    public void mouseClicked (java.awt.event.MouseEvent evt) {
                        jTextField2MouseClicked (evt);
                    }
                }
                );
    
                jPanel8.add (jTextField2);
    
                jLabel4.setText ("Text Area Background");
    
                jPanel8.add (jLabel4);
    
                jTextField3.setEditable (false);
                jTextField3.addMouseListener (new java.awt.event.MouseAdapter () {
                    public void mouseClicked (java.awt.event.MouseEvent evt) {
                        jTextField3MouseClicked (evt);
                    }
                }
                );
    
                jPanel8.add (jTextField3);
    
                jLabel5.setText ("Text Base Color");
    
                jPanel8.add (jLabel5);
    
                jTextField4.setEditable (false);
                jTextField4.addMouseListener (new java.awt.event.MouseAdapter () {
                    public void mouseClicked (java.awt.event.MouseEvent evt) {
                        jTextField4MouseClicked (evt);
                    }
                }
                );
    
                jPanel8.add (jTextField4);
    
                jLabel6.setText ("Toolbar Color");
    
                jPanel8.add (jLabel6);
    
                jTextField5.setEditable (false);
                jTextField5.addMouseListener (new java.awt.event.MouseAdapter () {
                    public void mouseClicked (java.awt.event.MouseEvent evt) {
                        jTextField5MouseClicked (evt);
                    }
                }
                );
    
                jPanel8.add (jTextField5);
    
                jLabel7.setText ("JInternalFrame Border Color");
    
                jPanel8.add (jLabel7);
    
                jTextField6.setEditable (false);
                jTextField6.addMouseListener (new java.awt.event.MouseAdapter () {
                    public void mouseClicked (java.awt.event.MouseEvent evt) {
                        jTextField6MouseClicked (evt);
                    }
                }
                );
    
                jPanel8.add (jTextField6);
    
              jTabbedPane1.addTab ("General Colors", jPanel8);
  
              jPanel9.setLayout (new java.awt.GridLayout (9, 2));
  
    
                jPanel9.add (jLabel8);
    
                jCheckBox2.setText ("Syntax Coloring Enabled");
    
                jPanel9.add (jCheckBox2);
    
                jLabel9.setText ("Color of Operators");
    
                jPanel9.add (jLabel9);
    
                jTextField7.setEditable (false);
                jTextField7.addMouseListener (new java.awt.event.MouseAdapter () {
                    public void mouseClicked (java.awt.event.MouseEvent evt) {
                        jTextField7MouseClicked (evt);
                    }
                }
                );
    
                jPanel9.add (jTextField7);
    
                jLabel10.setText ("Color of Values");
    
                jPanel9.add (jLabel10);
    
                jTextField8.setEditable (false);
                jTextField8.addMouseListener (new java.awt.event.MouseAdapter () {
                    public void mouseClicked (java.awt.event.MouseEvent evt) {
                        jTextField8MouseClicked (evt);
                    }
                }
                );
    
                jPanel9.add (jTextField8);
    
                jLabel11.setText ("Color of types");
    
                jPanel9.add (jLabel11);
    
                jTextField9.setEditable (false);
                jTextField9.addMouseListener (new java.awt.event.MouseAdapter () {
                    public void mouseClicked (java.awt.event.MouseEvent evt) {
                        jTextField9MouseClicked (evt);
                    }
                }
                );
    
                jPanel9.add (jTextField9);
    
                jLabel12.setText ("Color of Expressions");
    
                jPanel9.add (jLabel12);
    
                jTextField10.setEditable (false);
                jTextField10.addMouseListener (new java.awt.event.MouseAdapter () {
                    public void mouseClicked (java.awt.event.MouseEvent evt) {
                        jTextField10MouseClicked (evt);
                    }
                }
                );
    
                jPanel9.add (jTextField10);
    
                jLabel13.setText ("Color of Declarations");
    
                jPanel9.add (jLabel13);
    
                jTextField11.setEditable (false);
                jTextField11.addMouseListener (new java.awt.event.MouseAdapter () {
                    public void mouseClicked (java.awt.event.MouseEvent evt) {
                        jTextField11MouseClicked (evt);
                    }
                }
                );
    
                jPanel9.add (jTextField11);
    
                jLabel14.setText ("Color of Modifiers");
    
                jPanel9.add (jLabel14);
    
                jTextField12.setEditable (false);
                jTextField12.addMouseListener (new java.awt.event.MouseAdapter () {
                    public void mouseClicked (java.awt.event.MouseEvent evt) {
                        jTextField12MouseClicked (evt);
                    }
                }
                );
    
                jPanel9.add (jTextField12);
    
                jLabel15.setText ("Color of Punctuations");
    
                jPanel9.add (jLabel15);
    
                jTextField13.setEditable (false);
                jTextField13.addMouseListener (new java.awt.event.MouseAdapter () {
                    public void mouseClicked (java.awt.event.MouseEvent evt) {
                        jTextField13MouseClicked (evt);
                    }
                }
                );
    
                jPanel9.add (jTextField13);
    
                jLabel16.setText ("Color of Special Symbols");
    
                jPanel9.add (jLabel16);
    
                jTextField14.setEditable (false);
                jTextField14.addMouseListener (new java.awt.event.MouseAdapter () {
                    public void mouseClicked (java.awt.event.MouseEvent evt) {
                        jTextField14MouseClicked (evt);
                    }
                }
                );
    
                jPanel9.add (jTextField14);
    
              jTabbedPane1.addTab ("Syntax Coloring Options", jPanel9);
  
              jPanel10.setLayout (new java.awt.BorderLayout ());
              jPanel10.setAutoscrolls (true);
  
    
                  jButton6.setText ("Add Command");
                  jButton6.addActionListener (new java.awt.event.ActionListener () {
                      public void actionPerformed (java.awt.event.ActionEvent evt) {
                          jButton6ActionPerformed (evt);
                      }
                  }
                  );
      
                  jPanel12.add (jButton6);
      
                  jButton7.setText ("Delete Command");
                  jButton7.addActionListener (new java.awt.event.ActionListener () {
                      public void actionPerformed (java.awt.event.ActionEvent evt) {
                          jButton7ActionPerformed (evt);
                      }
                  }
                  );
      
                  jPanel12.add (jButton7);
      
                jPanel10.add (jPanel12, java.awt.BorderLayout.SOUTH);
                String [] names = {"Abbreviation" , "Complete Sequence"};            
                  jScrollPane1.setViewportView (jTable2);
      
                jPanel10.add (jScrollPane1, java.awt.BorderLayout.CENTER);
    
              jTabbedPane1.addTab ("Auto-typer editor", jPanel10);
  

            getContentPane ().add (jTabbedPane1, java.awt.BorderLayout.CENTER);


              jButton1.setText ("Ok");
              jButton1.addActionListener (new java.awt.event.ActionListener () {
                  public void actionPerformed (java.awt.event.ActionEvent evt) {
                      jButton1ActionPerformed (evt);
                  }
              }
              );
  
              jPanel5.add (jButton1);
  
              jButton2.setText ("Cancel");
              jButton2.addActionListener (new java.awt.event.ActionListener () {
                  public void actionPerformed (java.awt.event.ActionEvent evt) {
                      jButton2ActionPerformed (evt);
                  }
              }
              );
  
              jPanel5.add (jButton2);
  

            getContentPane ().add (jPanel5, java.awt.BorderLayout.SOUTH);

            pack ();
        }//GEN-END:initComponents

        private void jTextField14MouseClicked (
                java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField14MouseClicked
                Color col =
                colorChooser.showDialog(this, "Select the text color...",
                null);
                jTextField14.setBackground(col);
        }//GEN-LAST:event_jTextField14MouseClicked

        private void jTextField13MouseClicked (
                java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField13MouseClicked
                Color col =
                colorChooser.showDialog(this, "Select the text color...",
                null);
                jTextField13.setBackground(col);
        }//GEN-LAST:event_jTextField13MouseClicked

        private void jTextField12MouseClicked (
                java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField12MouseClicked
                Color col =
                colorChooser.showDialog(this, "Select the text color...",
                null);
                jTextField12.setBackground(col);
        }//GEN-LAST:event_jTextField12MouseClicked

        private void jTextField11MouseClicked (
                java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField11MouseClicked
                Color col =
                colorChooser.showDialog(this, "Select the text color...",
                null);
                jTextField11.setBackground(col);
        }//GEN-LAST:event_jTextField11MouseClicked

        private void jTextField10MouseClicked (
                java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField10MouseClicked
                Color col =
                colorChooser.showDialog(this, "Select the text color...",
                null);
                jTextField10.setBackground(col);
        }//GEN-LAST:event_jTextField10MouseClicked

        private void jTextField9MouseClicked (
                java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField9MouseClicked
                Color col =
                colorChooser.showDialog(this, "Select the text color...",
                null);
                jTextField9.setBackground(col);
        }//GEN-LAST:event_jTextField9MouseClicked

        private void jTextField8MouseClicked (
                java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField8MouseClicked
                Color col =
                colorChooser.showDialog(this, "Select the text color...",
                null);
                jTextField8.setBackground(col);
        }//GEN-LAST:event_jTextField8MouseClicked

        private void jTextField7MouseClicked (
                java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField7MouseClicked
                Color col =
                colorChooser.showDialog(this, "Select the text color...",
                null);
                jTextField7.setBackground(col);
        }//GEN-LAST:event_jTextField7MouseClicked

        private void jTextField6MouseClicked (
                java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField6MouseClicked
                Color col =
                colorChooser.showDialog(this, "Select the text color...",
                null);
                jTextField6.setBackground(col);
        }//GEN-LAST:event_jTextField6MouseClicked

        private void jTextField5MouseClicked (
                java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField5MouseClicked
                Color col =
                colorChooser.showDialog(this, "Select the text color...",
                null);
                jTextField5.setBackground(col);
        }//GEN-LAST:event_jTextField5MouseClicked

        private void jTextField4MouseClicked (
                java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField4MouseClicked
                Color col =
                colorChooser.showDialog(this, "Select the text color...",
                null);
                jTextField4.setBackground(col);
        }//GEN-LAST:event_jTextField4MouseClicked

        private void jTextField3MouseClicked (
                java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField3MouseClicked
                Color col =
                colorChooser.showDialog(this, "Select the text color...",
                null);
                jTextField3.setBackground(col);
        }//GEN-LAST:event_jTextField3MouseClicked

        private void jTextField2MouseClicked (
                java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField2MouseClicked
                Color col =
                colorChooser.showDialog(this, "Select the text color...",
                null);
                jTextField2.setBackground(col);
        }//GEN-LAST:event_jTextField2MouseClicked

        private void jButton6ActionPerformed (
                java.awt.event.ActionEvent evt) {
          AddCommandPane newPane = new AddCommandPane(new java.awt.Frame(), true);
          newPane.show();
          model.addRow(newPane.getAbbreviation()); 
        }

        private void jButton7ActionPerformed (
                java.awt.event.ActionEvent evt) {
        try {
        model.removeRow(jTable2.getSelectedRow());                
        }
        catch (ArrayIndexOutOfBoundsException aioobe)
        {
                ie.InterfaceError(aioobe.getMessage());
        }

        }

        private void jButton2ActionPerformed (
                java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
                dispose();
        }//GEN-LAST:event_jButton2ActionPerformed

        private void jButton1ActionPerformed (
                java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
                decideOptions();
                storeOptions();
                dispose();
        }//GEN-LAST:event_jButton1ActionPerformed

        /** Closes the dialog */
        private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
                setVisible (false);
                dispose ();
        }//GEN-LAST:event_closeDialog


        /**
        *
        *Determines the options that were chosen, and acts on them
        */
        public void decideOptions() {
                leJOSHome = jTextField1.getText();
                if (jCheckBox1.isSelected() == (true)) {
                        Emulation = true;
                }
                if (jRadioButton1.isSelected() == true) {
                        try {
                                javax.swing.UIManager.setLookAndFeel(
                                        javax.swing.UIManager.getCrossPlatformLookAndFeelClassName());
                        } catch (ClassNotFoundException cnfe) {}
                        catch (InstantiationException ie) {}
                        catch (IllegalAccessException iae) {}
                        catch (UnsupportedLookAndFeelException ulafe) {}
                        LookAndFeel = "Java";
                }
                if (jRadioButton2.isSelected() == true) {
                        try {
                                javax.swing.UIManager.setLookAndFeel(
                                        new com.sun.java.swing.plaf.motif.MotifLookAndFeel());
                        } catch (UnsupportedLookAndFeelException ulafe) {}
                        LookAndFeel = "Motif";
                }
                if (jRadioButton3.isSelected() == true) {
                        try {
                                javax.swing.UIManager.setLookAndFeel(
                                        new com.sun.java.swing.plaf.windows.WindowsLookAndFeel());
                        } catch (UnsupportedLookAndFeelException ulafe) {}
                        LookAndFeel = "Windows";
                }
                rcxCom = (String) jComboBox1.getSelectedItem();
                // see if syntax coloring is enabled
                if (jCheckBox2.isSelected() == true) {
                        coloring = true;
                }
                // get the selected colors
                deskback = jTextField2.getBackground();
                firePropertyChange("deskback", null, deskback);
                textback = jTextField3.getBackground();
                firePropertyChange("textback", null, textback);
                textbase = jTextField4.getBackground();
                firePropertyChange("textbase", null, textbase);
                toolbar = jTextField5.getBackground();
                firePropertyChange("toolbar", null, toolbar);
                border = jTextField6.getBackground();
                firePropertyChange("border", null, border);
                operators = jTextField7.getBackground();
                firePropertyChange("operators", null, operators);
                values = jTextField8.getBackground();
                firePropertyChange("values", null, values);
                types = jTextField9.getBackground();
                firePropertyChange("types", null, types);
                expressions = jTextField10.getBackground();
                firePropertyChange("expressions", null, expressions);
                declarations = jTextField11.getBackground();
                firePropertyChange("declarations", null, declarations);
                modifiers = jTextField12.getBackground();
                firePropertyChange("modifiers", null, modifiers);
                punctuations = jTextField13.getBackground();
                firePropertyChange("punctuations", null, punctuations);
                specials = jTextField14.getBackground();
                firePropertyChange("specials", null, specials);
                //change Colors to Strings (should be an array)
                sdeskback = new String().valueOf(deskback.getRGB());
                stextback = new String().valueOf(textback.getRGB());
                stextbase = new String().valueOf(textbase.getRGB());
                stoolbar = new String().valueOf(toolbar.getRGB());
                sborder = new String().valueOf(border.getRGB());
                soperators = new String().valueOf(operators.getRGB());
                svalues = new String().valueOf(values.getRGB());
                stypes = new String().valueOf(types.getRGB());
                sexpressions = new String().valueOf(expressions.getRGB());
                sdeclarations = new String().valueOf(declarations.getRGB());
                smodifiers = new String().valueOf(modifiers.getRGB());
                spunctuations = new String().valueOf(punctuations.getRGB());
                sspecials = new String().valueOf(specials.getRGB());
                //Change the model for storing in properties , move model around not table
                Vector newData = model.getDataVector();
                newShortcut = new String [newData.size()] [2];
                for (int i=0;i<newData.size();i++)
                {
                        for (int j=0;j<2;j++)
                        {
                                newShortcut[i] [j] = (String) ((Vector)newData.elementAt(i)).elementAt(j);
                        }                                                                     
                }              
        firePropertyChange("shortcut",null, newShortcut);
        }
        /**
         *
         *Stores the options for later use
         */
        public void storeOptions() {
                Boolean stringEmulation = new Boolean(Emulation);
                optionProps.put("Emulation", stringEmulation.toString());
                optionProps.put("LookAndFeel", LookAndFeel);
                optionProps.put("leJOSHome", leJOSHome);
                optionProps.put("RCXTTY", rcxCom);
                optionProps.put("deskback", sdeskback);
                optionProps.put("textback", stextback);
                optionProps.put("textbase", stextbase);
                optionProps.put("toolbar", stoolbar);
                optionProps.put("border", sborder);
                optionProps.put("operators", soperators);
                optionProps.put("values", svalues);
                optionProps.put("types", stypes);
                optionProps.put("expressions", sexpressions);
                optionProps.put("declarations", sdeclarations);
                optionProps.put("modifiers", smodifiers);
                optionProps.put("punctuations", spunctuations);
                optionProps.put("specials", sspecials);
                optionProps.put("coloring", new Boolean(coloring).toString());
                optionProps.put("shortcut", newShortcut);

        }

        /**
         *
         *Displays the options on the frame when it is displayed
         */
        public void displayOptions() {
                int i;
                if (optionProps.getProperty("Emulation").equals("true")) {
                        jCheckBox1.setSelected(true);
                }

                if (optionProps.getProperty(
                        "LookAndFeel").equalsIgnoreCase("Java")) {
                        jRadioButton1.setSelected(true);
                }
                if (optionProps.getProperty(
                        "LookAndFeel").equalsIgnoreCase("Motif")) {
                        jRadioButton2.setSelected(true);
                }
                if (optionProps.getProperty(
                        "LookAndFeel").equalsIgnoreCase("Windows")) {
                        jRadioButton3.setSelected(true);
                }
                jTextField1.setText(optionProps.getProperty("leJOSHome"));
                for (i = 0; i < comPorts.length; i++) {
                        if (optionProps.getProperty(
                                "RCXTTY").equalsIgnoreCase(comPorts[i])) {
                                jComboBox1.setSelectedIndex(i);
                        }
                }
                //show colors
                jTextField2.setBackground( new Color( new Integer(
                        optionProps.getProperty("deskback")).intValue()));
                jTextField3.setBackground( new Color( new Integer(
                        optionProps.getProperty("textback")).intValue()));
                jTextField4.setBackground( new Color( new Integer(
                        optionProps.getProperty("textbase")).intValue()));
                jTextField5.setBackground( new Color( new Integer(
                        optionProps.getProperty("toolbar")).intValue()));
                jTextField6.setBackground( new Color( new Integer(
                        optionProps.getProperty("border")).intValue()));
                jTextField7.setBackground( new Color( new Integer(
                        optionProps.getProperty("operators")).intValue()));
                jTextField8.setBackground( new Color( new Integer(
                        optionProps.getProperty("values")).intValue()));
                jTextField9.setBackground( new Color( new Integer(
                        optionProps.getProperty("types")).intValue()));
                jTextField10.setBackground( new Color( new Integer(
                        optionProps.getProperty("expressions")).
                        intValue()));
                jTextField11.setBackground( new Color( new Integer(
                        optionProps.getProperty("declarations")).
                        intValue()));
                jTextField12.setBackground( new Color( new Integer(
                        optionProps.getProperty("modifiers")).intValue()));
                jTextField13.setBackground( new Color( new Integer(
                        optionProps.getProperty("punctuations")).
                        intValue()));
                jTextField14.setBackground( new Color( new Integer(
                        optionProps.getProperty("specials")).intValue()));
        }

        /**
         *
         *Returns the options that were currently selected
         */
        public Properties getOptions() {
                return optionProps;
        }
        /**
         *Sets the options that were previously saved from leJOS_InterfaceMain
         *@param loadedProps the previously loaded options
         */
        public void setOptions(Properties loadedProps) {
                optionProps = new Properties(loadedProps);
        }
        
        public void setShortcuts(String [] [] data){
                  String [] names = {"Abbreviation" , "Complete Sequence"};           

                  model =  new DefaultTableModel(data, names);

                  jTable2.setModel(model);      
        }                       
        /**
         * @param args the command line arguments
         */
        public static void main (String args[]) {
                new OptionFrame (new javax.swing.JFrame (), true).show ();
        }


        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JTabbedPane jTabbedPane1;
        private javax.swing.JPanel jPanel1;
        private javax.swing.JCheckBox jCheckBox1;
        private javax.swing.JPanel jPanel2;
        private javax.swing.JTextField jTextField1;
        private javax.swing.JLabel jLabel1;
        private javax.swing.JPanel jPanel3;
        private javax.swing.JRadioButton jRadioButton1;
        private javax.swing.JRadioButton jRadioButton2;
        private javax.swing.JRadioButton jRadioButton3;
        private javax.swing.JPanel jPanel4;
        private javax.swing.JPanel jPanel6;
        private javax.swing.JPanel jPanel7;
        private javax.swing.JComboBox jComboBox1;
        private javax.swing.JLabel jLabel2;
        private javax.swing.JPanel jPanel8;
        private javax.swing.JLabel jLabel3;
        private javax.swing.JTextField jTextField2;
        private javax.swing.JLabel jLabel4;
        private javax.swing.JTextField jTextField3;
        private javax.swing.JLabel jLabel5;
        private javax.swing.JTextField jTextField4;
        private javax.swing.JLabel jLabel6;
        private javax.swing.JTextField jTextField5;
        private javax.swing.JLabel jLabel7;
        private javax.swing.JTextField jTextField6;
        private javax.swing.JPanel jPanel9;
        private javax.swing.JLabel jLabel8;
        private javax.swing.JCheckBox jCheckBox2;
        private javax.swing.JLabel jLabel9;
        private javax.swing.JTextField jTextField7;
        private javax.swing.JLabel jLabel10;
        private javax.swing.JTextField jTextField8;
        private javax.swing.JLabel jLabel11;
        private javax.swing.JTextField jTextField9;
        private javax.swing.JLabel jLabel12;
        private javax.swing.JTextField jTextField10;
        private javax.swing.JLabel jLabel13;
        private javax.swing.JTextField jTextField11;
        private javax.swing.JLabel jLabel14;
        private javax.swing.JTextField jTextField12;
        private javax.swing.JLabel jLabel15;
        private javax.swing.JTextField jTextField13;
        private javax.swing.JLabel jLabel16;
        private javax.swing.JTextField jTextField14;
        private javax.swing.JPanel jPanel10;
        private javax.swing.JPanel jPanel12;
        private javax.swing.JButton jButton6;
        private javax.swing.JButton jButton7;
        private javax.swing.JScrollPane jScrollPane1;
        private javax.swing.JTable jTable2;
        private javax.swing.JPanel jPanel5;
        private javax.swing.JButton jButton1;
        private javax.swing.JButton jButton2;
        // End of variables declaration//GEN-END:variables
        private InterfaceErrors ie = new InterfaceErrors();
        private String [] [] newShortcut;
        private String [] [] data;
        private DefaultTableModel model;
        private JColorChooser colorChooser = new JColorChooser();
        private javax.swing.ButtonGroup LFGroup;
        private String leJOSHome;
        private boolean Emulation = false;
        private String LookAndFeel;
        private String rcxCom;
        private Properties optionProps;
        private String comPorts[] = { "COM1" , "COM2" , "COM3" ,
        "COM4" , "/dev/ttyS0" , "/dev/ttyS1" , "/dev/ttyS2" ,
        "/dev/ttyS3" };
        private Color deskback;
        private Color textback;
        private Color textbase;
        private Color toolbar;
        private Color border;
        private Color operators;
        private Color values;
        private Color expressions;
        private Color types;
        private Color declarations;
        private Color modifiers;
        private Color punctuations;
        private Color specials;
        private String sdeskback;
        private String stextback;
        private String stextbase;
        private String stoolbar;
        private String sborder;
        private String soperators;
        private String svalues;
        private String sexpressions;
        private String stypes;
        private String sdeclarations;
        private String smodifiers;
        private String spunctuations;
        private String sspecials;
        private boolean coloring;
}

